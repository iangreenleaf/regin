#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'

require 'reginald/tokenizer'
module Reginald
  class Parser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
     5,    31,    11,     6,     7,     9,    40,    10,    45,    14,
     5,    12,    11,     6,     7,     9,    41,    10,    37,    14,
     5,    12,    11,     6,     7,     9,    28,    10,    47,    14,
     5,    12,    11,     6,     7,     9,    48,    10,    46,   nil,
     5,    12,    11,     6,     7,     9,    13,    10,    14,   nil,
     5,    12,    11,     6,     7,     9,    27,    10,    38,    39,
     5,    12,    11,     6,     7,     9,    19,    10,   nil,    19,
   nil,    12,    17,    18,    20,    17,    18,    20,    32,   nil,
   nil,    34,    33,    35,    42,   nil,   nil,    34,    33,    35,
    22,   nil,    24,    23,    25,    24,    23,    25 ]

racc_action_check = [
     0,    20,     0,     0,     0,     0,    31,     0,    40,    26,
    39,     0,    39,    39,    39,    39,    31,    39,    26,    44,
     2,    39,     2,     2,     2,     2,    13,     2,    44,    43,
    14,     2,    14,    14,    14,    14,    45,    14,    43,   nil,
    29,    14,    29,    29,    29,    29,     1,    29,     1,   nil,
    10,    29,    10,    10,    10,    10,    10,    10,    27,    27,
    38,    10,    38,    38,    38,    38,     3,    38,   nil,    15,
   nil,    38,     3,     3,     3,    15,    15,    15,    21,   nil,
   nil,    21,    21,    21,    36,   nil,   nil,    36,    36,    36,
     5,   nil,     5,     5,     5,    22,    22,    22 ]

racc_action_pointer = [
    -3,    46,    17,    57,   nil,    85,   nil,   nil,   nil,   nil,
    47,   nil,   nil,    26,    27,    60,   nil,   nil,   nil,   nil,
    -7,    74,    88,   nil,   nil,   nil,     7,    46,   nil,    37,
   nil,    -2,   nil,   nil,   nil,   nil,    80,   nil,    57,     7,
     0,   nil,   nil,    27,    17,    18,   nil,   nil,   nil ]

racc_action_default = [
   -30,   -30,    -2,    -6,    -7,   -30,   -10,   -11,   -12,   -13,
   -30,   -23,   -24,   -30,   -30,    -4,    -5,   -25,   -26,   -27,
   -30,   -30,   -30,   -17,   -18,   -19,   -30,   -30,    49,    -1,
    -3,   -30,    -8,   -14,   -15,   -16,   -30,   -20,   -30,   -30,
   -30,   -29,    -9,   -30,   -30,   -30,   -21,   -22,   -28 ]

racc_goto_table = [
     1,    15,    21,    16,    29,   nil,   nil,   nil,   nil,   nil,
    26,   nil,   nil,   nil,   nil,    30,   nil,   nil,   nil,    36,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    15,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    43,    44 ]

racc_goto_check = [
     1,     3,     6,     4,     2,   nil,   nil,   nil,   nil,   nil,
     1,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,     6,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     3,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     1,     1 ]

racc_goto_pointer = [
   nil,     0,   -10,    -1,     0,   nil,    -3,   nil ]

racc_goto_default = [
   nil,   nil,     2,     3,   nil,     4,   nil,     8 ]

racc_reduce_table = [
  0, 0, :racc_error,
  3, 20, :_reduce_1,
  1, 20, :_reduce_2,
  3, 21, :_reduce_3,
  2, 21, :_reduce_4,
  2, 21, :_reduce_5,
  1, 21, :_reduce_none,
  1, 22, :_reduce_none,
  3, 22, :_reduce_8,
  4, 22, :_reduce_9,
  1, 22, :_reduce_10,
  1, 22, :_reduce_11,
  1, 22, :_reduce_12,
  1, 22, :_reduce_13,
  2, 25, :_reduce_14,
  2, 25, :_reduce_15,
  2, 25, :_reduce_16,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  3, 24, :_reduce_20,
  5, 24, :_reduce_21,
  5, 24, :_reduce_22,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 23, :_reduce_none,
  1, 23, :_reduce_none,
  1, 23, :_reduce_none,
  5, 23, :_reduce_28,
  3, 23, :_reduce_29 ]

racc_reduce_n = 30

racc_shift_n = 49

racc_token_table = {
  false => 0,
  :error => 1,
  :BAR => 2,
  :LBRACK => 3,
  :RBRACK => 4,
  :L_ANCHOR => 5,
  :CHAR_CLASS => 6,
  :DOT => 7,
  :CHAR => 8,
  :QMARK => 9,
  :LPAREN => 10,
  :RPAREN => 11,
  :COLON => 12,
  :NAME => 13,
  :R_ANCHOR => 14,
  :STAR => 15,
  :PLUS => 16,
  :LCURLY => 17,
  :RCURLY => 18 }

racc_nt_base = 19

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "BAR",
  "LBRACK",
  "RBRACK",
  "L_ANCHOR",
  "CHAR_CLASS",
  "DOT",
  "CHAR",
  "QMARK",
  "LPAREN",
  "RPAREN",
  "COLON",
  "NAME",
  "R_ANCHOR",
  "STAR",
  "PLUS",
  "LCURLY",
  "RCURLY",
  "$start",
  "expression",
  "branch",
  "atom",
  "quantifier",
  "group",
  "bracket_expression",
  "anchor" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

def _reduce_1(val, _values, result)
 result = Expression.new([Alternation.reduce(val[0], val[2])]) 
    result
end

def _reduce_2(val, _values, result)
 result = Expression.reduce(val[0]) 
    result
end

def _reduce_3(val, _values, result)
            val[1].quantifier = val[2]
            result = Expression.reduce(val[0], val[1])
          
    result
end

def _reduce_4(val, _values, result)
 result = Expression.reduce(val[0], val[1]) 
    result
end

def _reduce_5(val, _values, result)
            val[0].quantifier = val[1]
            result = val[0]
          
    result
end

# reduce 6 omitted

# reduce 7 omitted

def _reduce_8(val, _values, result)
 result = CharacterClass.new(val[1]) 
    result
end

def _reduce_9(val, _values, result)
 result = CharacterClass.new(val[2]); result.negate = true 
    result
end

def _reduce_10(val, _values, result)
 result = CharacterClass.new(val[0]) 
    result
end

def _reduce_11(val, _values, result)
 result = CharacterClass.new(val[0]) 
    result
end

def _reduce_12(val, _values, result)
 result = Anchor.new(val[0]) 
    result
end

def _reduce_13(val, _values, result)
 result = Character.new(val[0]) 
    result
end

def _reduce_14(val, _values, result)
 result = val.join 
    result
end

def _reduce_15(val, _values, result)
 result = val.join 
    result
end

def _reduce_16(val, _values, result)
 result = val.join 
    result
end

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

def _reduce_20(val, _values, result)
 result = Group.new(val[1]) 
    result
end

def _reduce_21(val, _values, result)
 result = Group.new(val[3]); result.capture = false 
    result
end

def _reduce_22(val, _values, result)
 result = Group.new(val[3]); result.name = val[2] 
    result
end

# reduce 23 omitted

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

def _reduce_28(val, _values, result)
 result = val.join 
    result
end

def _reduce_29(val, _values, result)
 result = val.join 
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
end   # module Reginald
