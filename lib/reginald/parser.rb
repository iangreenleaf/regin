#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'

require 'reginald/tokenizer'
module Reginald
  class Parser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
     2,    37,     5,     7,     8,    10,    46,    12,    49,    19,
     2,     1,     5,     7,     8,    10,    45,    12,    50,    19,
     2,     1,     5,     7,     8,    10,    34,    12,    42,    19,
     2,     1,     5,     7,     8,    10,    51,    12,    52,    48,
     2,     1,     5,     7,     8,    10,    18,    12,    19,    53,
     2,     1,     5,     7,     8,    10,    54,    12,    55,    26,
     2,     1,     5,     7,     8,    10,    39,    12,    14,    15,
    17,     1,    40,    25,    41,    56,    38,    25,    57,    21,
    22,    23,    58,    21,    22,    23,    30,    59,   nil,    31,
    32,    33,    44,   nil,   nil,    31,    32,    33,    13,   nil,
    14,    15,    17 ]

racc_action_check = [
     0,    23,     0,     0,     0,     0,    37,     0,    41,    43,
    35,     0,    35,    35,    35,    35,    37,    35,    43,    27,
    19,    35,    19,    19,    19,    19,    18,    19,    27,    47,
     4,    19,     4,     4,     4,     4,    46,     4,    47,    40,
    39,     4,    39,    39,    39,    39,     3,    39,     3,    48,
    12,    39,    12,    12,    12,    12,    49,    12,    51,    12,
    28,    12,    28,    28,    28,    28,    26,    28,    13,    13,
    13,    28,    26,     6,    26,    53,    26,    20,    54,     6,
     6,     6,    56,    20,    20,    20,    16,    57,   nil,    16,
    16,    16,    29,   nil,   nil,    29,    29,    29,     2,   nil,
     2,     2,     2 ]

racc_action_pointer = [
    -3,   nil,    93,    46,    27,   nil,    64,   nil,   nil,   nil,
   nil,   nil,    47,    61,   nil,   nil,    82,   nil,    26,    17,
    68,   nil,   nil,    -7,   nil,   nil,    53,    17,    57,    88,
   nil,   nil,   nil,   nil,   nil,     7,   nil,    -2,   nil,    37,
    19,   -11,   nil,     7,   nil,   nil,    28,    27,    28,    36,
   nil,    40,   nil,    53,    56,   nil,    59,    64,   nil,   nil ]

racc_action_default = [
   -33,   -24,   -33,   -33,    -2,   -23,    -6,   -10,   -11,    -7,
   -13,   -12,   -33,   -33,   -18,   -17,   -33,   -19,   -33,   -33,
    -4,   -25,   -26,   -33,    -5,   -27,   -33,   -33,   -33,   -33,
    -8,   -15,   -14,   -16,    60,    -1,    -3,   -33,   -32,   -33,
   -33,   -33,   -20,   -33,    -9,   -29,   -33,   -33,   -33,   -33,
   -21,   -33,   -22,   -33,   -33,   -28,   -33,   -33,   -30,   -31 ]

racc_goto_table = [
     3,    20,    24,    16,    35,    28,   nil,   nil,   nil,   nil,
   nil,   nil,    27,   nil,    29,   nil,    36,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    43,   nil,
   nil,   nil,    20,   nil,   nil,   nil,   nil,   nil,   nil,    47 ]

racc_goto_check = [
     1,     3,     4,     6,     2,     8,   nil,   nil,   nil,   nil,
   nil,   nil,     1,   nil,     6,   nil,     4,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     1,   nil,
   nil,   nil,     3,   nil,   nil,   nil,   nil,   nil,   nil,     1 ]

racc_goto_pointer = [
   nil,     0,   -15,    -3,    -4,   nil,     1,   nil,    -7 ]

racc_goto_default = [
   nil,   nil,     4,     6,   nil,     9,   nil,    11,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  3, 25, :_reduce_1,
  1, 25, :_reduce_2,
  3, 26, :_reduce_3,
  2, 26, :_reduce_4,
  2, 26, :_reduce_5,
  1, 26, :_reduce_none,
  1, 27, :_reduce_none,
  3, 27, :_reduce_8,
  4, 27, :_reduce_9,
  1, 27, :_reduce_10,
  1, 27, :_reduce_11,
  1, 27, :_reduce_12,
  1, 27, :_reduce_13,
  2, 30, :_reduce_14,
  2, 30, :_reduce_15,
  2, 30, :_reduce_16,
  1, 30, :_reduce_none,
  1, 30, :_reduce_none,
  1, 30, :_reduce_none,
  3, 29, :_reduce_20,
  4, 29, :_reduce_21,
  5, 29, :_reduce_22,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  5, 28, :_reduce_28,
  3, 28, :_reduce_29,
  6, 32, :_reduce_30,
  6, 32, :_reduce_31,
  2, 32, :_reduce_32 ]

racc_reduce_n = 33

racc_shift_n = 60

racc_token_table = {
  false => 0,
  :error => 1,
  :BAR => 2,
  :LBRACK => 3,
  :RBRACK => 4,
  :L_ANCHOR => 5,
  :CHAR_CLASS => 6,
  :DOT => 7,
  :CHAR => 8,
  :QMARK => 9,
  :LPAREN => 10,
  :RPAREN => 11,
  :OPTIONS_QMARK => 12,
  :NAME => 13,
  :R_ANCHOR => 14,
  :STAR => 15,
  :PLUS => 16,
  :LCURLY => 17,
  :RCURLY => 18,
  :OPTIONS_MINUS => 19,
  :OPTIONS_MULTILINE => 20,
  :OPTIONS_IGNORECASE => 21,
  :OPTIONS_EXTENDED => 22,
  :OPTIONS_COLON => 23 }

racc_nt_base = 24

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "BAR",
  "LBRACK",
  "RBRACK",
  "L_ANCHOR",
  "CHAR_CLASS",
  "DOT",
  "CHAR",
  "QMARK",
  "LPAREN",
  "RPAREN",
  "OPTIONS_QMARK",
  "NAME",
  "R_ANCHOR",
  "STAR",
  "PLUS",
  "LCURLY",
  "RCURLY",
  "OPTIONS_MINUS",
  "OPTIONS_MULTILINE",
  "OPTIONS_IGNORECASE",
  "OPTIONS_EXTENDED",
  "OPTIONS_COLON",
  "$start",
  "expression",
  "branch",
  "atom",
  "quantifier",
  "group",
  "bracket_expression",
  "anchor",
  "options" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

def _reduce_1(val, _values, result)
 result = Expression.new(Alternation.reduce(val[0], val[2])) 
    result
end

def _reduce_2(val, _values, result)
 result = Expression.reduce(val[0]) 
    result
end

def _reduce_3(val, _values, result)
            val[1].quantifier = val[2]
            result = Expression.reduce(val[0], val[1])
          
    result
end

def _reduce_4(val, _values, result)
 result = Expression.reduce(val[0], val[1]) 
    result
end

def _reduce_5(val, _values, result)
            val[0].quantifier = val[1]
            result = val[0]
          
    result
end

# reduce 6 omitted

# reduce 7 omitted

def _reduce_8(val, _values, result)
 result = CharacterClass.new(val[1]) 
    result
end

def _reduce_9(val, _values, result)
 result = CharacterClass.new(val[2]); result.negate = true 
    result
end

def _reduce_10(val, _values, result)
 result = CharacterClass.new(val[0]) 
    result
end

def _reduce_11(val, _values, result)
 result = CharacterClass.new(val[0]) 
    result
end

def _reduce_12(val, _values, result)
 result = Anchor.new(val[0]) 
    result
end

def _reduce_13(val, _values, result)
 result = Character.new(val[0]) 
    result
end

def _reduce_14(val, _values, result)
 result = val.join 
    result
end

def _reduce_15(val, _values, result)
 result = val.join 
    result
end

def _reduce_16(val, _values, result)
 result = val.join 
    result
end

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

def _reduce_20(val, _values, result)
 result = Group.new(val[1]) 
    result
end

def _reduce_21(val, _values, result)
          options = val[1];
          result = Group.new(val[2]);
          result.capture = options[:capture];
          result.expression.multiline = options[:multiline];
          result.expression.ignorecase = options[:ignorecase];
          result.expression.extended = options[:extended];
        
    result
end

def _reduce_22(val, _values, result)
          result = Group.new(val[3]);
          result.name = val[2];
        
    result
end

# reduce 23 omitted

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

def _reduce_28(val, _values, result)
 result = val.join 
    result
end

def _reduce_29(val, _values, result)
 result = val.join 
    result
end

def _reduce_30(val, _values, result)
            result = { :capture => false, :multiline => false, :ignorecase => false, :extended => false }
          
    result
end

def _reduce_31(val, _values, result)
            result = { :capture => false, :ignorecase => true, :multiline => false, :extended => false }
          
    result
end

def _reduce_32(val, _values, result)
           result = { :capture => false, :multiline => false, :ignorecase => false, :extended => false }
          
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
end   # module Reginald
