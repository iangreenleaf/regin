#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Reginald
  class Parser < Racc::Parser

attr_accessor :capture_index
attr_accessor :capture_index_stack

##### State transition tables begin ###

racc_action_table = [
     1,    17,    18,    18,     7,     8,    10,    11,    46,    18,
     1,    43,     2,     4,     7,     8,    10,    11,    58,    45,
     1,    53,     2,     4,     7,     8,    10,    11,    47,    18,
     1,    61,     2,     4,     7,     8,    10,    11,    59,    18,
     1,    27,     2,     4,     7,     8,    10,    11,    62,    15,
     1,    34,     2,     4,     7,     8,    10,    11,    31,    25,
     1,   nil,     2,     4,     7,     8,    10,    11,   nil,   nil,
     1,   nil,     2,     4,     7,     8,    10,    11,    40,    41,
    29,   nil,     2,     4,    30,    20,    42,    35,    37,    39,
    21,    22,    24,    20,    49,    35,    37,    39,    21,    22,
    24,    13,   nil,    14,    44,   nil,    15,   nil,    30,    56,
    35,    37,    39,    35,    37,    39,    35,    37,    39,    35,
    37,    39,    35,    37,    39,    35,    37,    39,    35,    37,
    39 ]

racc_action_check = [
     0,     3,    26,     3,     0,     0,     0,     0,    34,    50,
    47,    26,     0,     0,    47,    47,    47,    47,    50,    34,
    41,    46,    47,    47,    41,    41,    41,    41,    36,    51,
     5,    53,    41,    41,     5,     5,     5,     5,    51,    54,
    32,    13,     5,     5,    32,    32,    32,    32,    54,    14,
    11,    24,    32,    32,    11,    11,    11,    11,    17,    11,
    18,   nil,    11,    11,    18,    18,    18,    18,   nil,   nil,
    40,   nil,    18,    18,    40,    40,    40,    40,    25,    25,
    16,   nil,    40,    40,    16,    19,    25,    25,    25,    25,
    19,    19,    19,     6,    38,    38,    38,    38,     6,     6,
     6,     1,   nil,     1,    28,   nil,     1,   nil,    28,    48,
    48,    48,    48,    52,    52,    52,    56,    56,    56,    57,
    57,    57,    60,    60,    60,    49,    49,    49,    42,    42,
    42 ]

racc_action_pointer = [
    -3,    97,   nil,     1,   nil,    27,    81,   nil,   nil,   nil,
   nil,    47,   nil,    36,    40,   nil,    75,    58,    57,    73,
   nil,   nil,   nil,   nil,    42,    65,     0,   nil,    99,   nil,
   nil,   nil,    37,   nil,    -1,   nil,    15,   nil,    73,   nil,
    67,    17,   106,   nil,   nil,   nil,    12,     7,    88,   103,
     7,    27,    91,    11,    37,   nil,    94,    97,   nil,   nil,
   100,   nil,   nil,   nil,   nil,   nil ]

racc_action_default = [
   -35,   -35,   -21,   -35,   -22,    -2,    -6,   -11,   -12,    -7,
   -14,   -35,   -13,   -35,   -35,   -16,   -35,   -35,   -35,    -4,
   -25,   -23,   -24,    -5,   -35,   -35,   -35,    -8,   -35,    -9,
   -15,    66,    -1,    -3,   -35,   -32,   -35,   -33,   -35,   -34,
   -35,   -35,   -35,   -17,   -10,   -27,   -35,   -35,   -35,   -35,
   -35,   -35,   -35,   -35,   -35,   -31,   -35,   -35,   -19,   -20,
   -35,   -26,   -18,   -30,   -29,   -28 ]

racc_goto_table = [
     3,    38,    19,    16,    23,    36,    32,   nil,   nil,   nil,
   nil,    26,   nil,   nil,    48,   nil,    28,    33,    52,   nil,
   nil,   nil,   nil,   nil,    55,    57,   nil,   nil,    60,    19,
   nil,   nil,    63,    64,   nil,   nil,    65,   nil,   nil,   nil,
    50,    51,   nil,   nil,   nil,   nil,   nil,    54 ]

racc_goto_check = [
     1,     9,     3,     6,     4,     8,     2,   nil,   nil,   nil,
   nil,     1,   nil,   nil,     9,   nil,     6,     4,     9,   nil,
   nil,   nil,   nil,   nil,     9,     9,   nil,   nil,     9,     3,
   nil,   nil,     9,     9,   nil,   nil,     9,   nil,   nil,   nil,
     1,     1,   nil,   nil,   nil,   nil,   nil,     1 ]

racc_goto_pointer = [
   nil,     0,   -12,    -3,    -2,   nil,     2,   nil,   -20,   -24 ]

racc_goto_default = [
   nil,   nil,     5,     6,   nil,     9,   nil,    12,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  3, 26, :_reduce_1,
  1, 26, :_reduce_2,
  3, 27, :_reduce_3,
  2, 27, :_reduce_4,
  2, 27, :_reduce_5,
  1, 27, :_reduce_none,
  1, 28, :_reduce_none,
  3, 28, :_reduce_8,
  3, 28, :_reduce_9,
  4, 28, :_reduce_10,
  1, 28, :_reduce_11,
  1, 28, :_reduce_12,
  1, 28, :_reduce_13,
  1, 28, :_reduce_14,
  2, 31, :_reduce_15,
  1, 31, :_reduce_none,
  3, 30, :_reduce_17,
  6, 30, :_reduce_18,
  5, 30, :_reduce_19,
  5, 30, :_reduce_20,
  1, 32, :_reduce_none,
  1, 32, :_reduce_none,
  1, 29, :_reduce_none,
  1, 29, :_reduce_none,
  1, 29, :_reduce_none,
  5, 29, :_reduce_26,
  3, 29, :_reduce_27,
  4, 33, :_reduce_28,
  4, 33, :_reduce_29,
  4, 33, :_reduce_30,
  3, 33, :_reduce_31,
  1, 34, :_reduce_32,
  1, 34, :_reduce_33,
  1, 34, :_reduce_34 ]

racc_reduce_n = 35

racc_shift_n = 66

racc_token_table = {
  false => 0,
  :error => 1,
  :BAR => 2,
  :LBRACK => 3,
  :LC_CTYPE => 4,
  :RBRACK => 5,
  :NEGATE => 6,
  :CCLASS => 7,
  :DOT => 8,
  :CHAR => 9,
  :LPAREN => 10,
  :RPAREN => 11,
  :QMARK => 12,
  :COLON => 13,
  :NAME => 14,
  :L_ANCHOR => 15,
  :R_ANCHOR => 16,
  :STAR => 17,
  :PLUS => 18,
  :LCURLY => 19,
  :RCURLY => 20,
  :MINUS => 21,
  :MULTILINE => 22,
  :IGNORECASE => 23,
  :EXTENDED => 24 }

racc_nt_base = 25

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "BAR",
  "LBRACK",
  "LC_CTYPE",
  "RBRACK",
  "NEGATE",
  "CCLASS",
  "DOT",
  "CHAR",
  "LPAREN",
  "RPAREN",
  "QMARK",
  "COLON",
  "NAME",
  "L_ANCHOR",
  "R_ANCHOR",
  "STAR",
  "PLUS",
  "LCURLY",
  "RCURLY",
  "MINUS",
  "MULTILINE",
  "IGNORECASE",
  "EXTENDED",
  "$start",
  "expression",
  "branch",
  "atom",
  "quantifier",
  "group",
  "bracket_expression",
  "anchor",
  "options",
  "modifier" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

def _reduce_1(val, _values, result)
 result = Expression.new(Alternation.reduce(val[0], val[2])) 
    result
end

def _reduce_2(val, _values, result)
 result = Expression.reduce(val[0]) 
    result
end

def _reduce_3(val, _values, result)
            val[1].quantifier = val[2]
            result = Expression.reduce(val[0], val[1])
          
    result
end

def _reduce_4(val, _values, result)
 result = Expression.reduce(val[0], val[1]) 
    result
end

def _reduce_5(val, _values, result)
            val[0].quantifier = val[1]
            result = val[0]
          
    result
end

# reduce 6 omitted

# reduce 7 omitted

def _reduce_8(val, _values, result)
 result = val[1] 
    result
end

def _reduce_9(val, _values, result)
 result = CharacterClass.new(val[1]) 
    result
end

def _reduce_10(val, _values, result)
 result = CharacterClass.new(val[2]); result.negate = true 
    result
end

def _reduce_11(val, _values, result)
 result = val[0] 
    result
end

def _reduce_12(val, _values, result)
 result = CharacterClass.new('.') 
    result
end

def _reduce_13(val, _values, result)
 result = Anchor.new(val[0]) 
    result
end

def _reduce_14(val, _values, result)
 result = Character.new(val[0]) 
    result
end

def _reduce_15(val, _values, result)
 result = val.join 
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
          result = Group.new(val[1])
          result.index = @capture_index_stack.pop
        
    result
end

def _reduce_18(val, _values, result)
          result = Group.new(val[4]);
          result.capture = false;
          options = val[2];
          result.expression.multiline  = options[:multiline];
          result.expression.ignorecase = options[:ignorecase];
          result.expression.extended   = options[:extended];
        
    result
end

def _reduce_19(val, _values, result)
          result = Group.new(val[3]);
          result.capture = false;
        
    result
end

def _reduce_20(val, _values, result)
          result = Group.new(val[3]);
          result.name = val[2];
          result.index = @capture_index_stack.pop
        
    result
end

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

# reduce 24 omitted

# reduce 25 omitted

def _reduce_26(val, _values, result)
 result = val.join 
    result
end

def _reduce_27(val, _values, result)
 result = val.join 
    result
end

def _reduce_28(val, _values, result)
 result = { val[1] => false, val[2] => false, val[3] => false } 
    result
end

def _reduce_29(val, _values, result)
 result = { val[0] => true, val[2] => false, val[3] => false } 
    result
end

def _reduce_30(val, _values, result)
 result = { val[0] => true, val[1] => true, val[3] => false } 
    result
end

def _reduce_31(val, _values, result)
 result = { val[0] => true, val[1] => true, val[2] => true } 
    result
end

def _reduce_32(val, _values, result)
 result = :multiline 
    result
end

def _reduce_33(val, _values, result)
 result = :ignorecase 
    result
end

def _reduce_34(val, _values, result)
 result = :extended 
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
end   # module Reginald

require 'reginald/tokenizer'
